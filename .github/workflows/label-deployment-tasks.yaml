name: Label Deployment Tasks

on:
  pull_request:

jobs:
  apply-label:
    runs-on: ubuntu-latest
    steps:
      - name: Label PR With Deployment Task
        uses: actions/github-script@v6
        with:
          script: |
            const LABEL = "Deployment Task";
            const MIGRATION_PATHS = [
                new RegExp("$lib/identity/repo/data_migrations/.*\.ex"),
                new RegExp("$priv/repo/seeds/.*\.exs"),
                new RegExp("$priv/repo/seeds/.*\.ex")
              ];
            const BASE_PARAMS = { owner: context.repo.owner, repo: context.repo.repo };

            const findMigrationFile = (files) => {
                return files.find((file) => ["modified", "added"].includes(file.status) && MIGRATION_PATHS.some( (regex) => regex.test(filename) ));
            };
            const findMigrationFileForPr = async (pr) => {
                const iterator = github.paginate.iterator(github.rest.pulls.listFiles, { ...BASE_PARAMS, pull_number: pr.number });
                for await (const { data: files } of iterator) {
                    const migrationFile = findMigrationFile(files);
                    if (migrationFile) return migrationFile;
                }
            };

            const pr = context.payload.pull_request
            console.log(`Checking PR:${pr.number}`);
            const migrationFile = await findMigrationFileForPr(pr)
            if (migrationFile) {
                console.log(`Applying ${LABEL} label to PR:${pr.number} because of file ${migrationFile.filename}`);
                await github.rest.issues.addLabels({ ...BASE_PARAMS, issue_number: pr.number, labels: [LABEL] });
            } else if (pr.labels.some( ({ name: name}) => name === LABEL)) {
                console.log(`Removing ${LABEL} label from PR:${pr.number}`);
                await github.rest.issues.removeLabel({ ...BASE_PARAMS, issue_number: pr.number, name: LABEL });
            }
