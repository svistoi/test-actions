name: Label Deployment Tasks

on:
  pull_request:
    paths:
      - "lib/identity/repo/data_migrations/*"
      - "priv/repo/seeds/**.exs"
      - "priv/repo/seeds/**.ex"
  push:
    paths:
      - "lib/identity/repo/data_migrations/*"
      - "priv/repo/seeds/**.exs"
      - "priv/repo/seeds/**.ex"

jobs:
  apply-label:
    runs-on: ubuntu-latest
    steps:
      - name: Label PR With Deployment Task
        uses: actions/github-script@v6
        with:
          script: |
            const LABEL = "Deployment Task";
            const MIGRATION_PREFIX_PATH = ["lib/identity/repo/data_migrations/", "priv/repo/seeds/"];
            const BASE_PARAMS = { owner: context.repo.owner, repo: context.repo.repo };

            const findMigrationFile = (files) => {
                const nameStartsWith = (filename) => MIGRATION_PREFIX_PATH.some( (path) => filename.startsWith(path) )
                return files.find((file) => ["modified", "added"].includes(file.status) && nameStartsWith(file.filename));
            };
            const findMigrationFileForPr = async (pr) => {
                const iterator = github.paginate.iterator(github.rest.pulls.listFiles, { ...BASE_PARAMS, pull_number: pr.number });

                for await (const { data: files } of iterator) {
                    migrationFile = findMigrationFile(files);
                    if (migrationFile) return { ...pr, migrationFile: migrationFile };
                }
                return pr;
            };
            const getPrsWithMaybeMigrationFile = async (sha) => {
                return github.rest.repos.listPullRequestsAssociatedWithCommit({ ...BASE_PARAMS, commit_sha: sha })
                    .then(({ data: pullRequests }) => Promise.all(pullRequests.map((pr) => findMigrationFileForPr(pr))));
            };

            const pullRequests = await getPrsWithMaybeMigrationFile(process.env.GITHUB_SHA);
            await pullRequests.forEach(async (pr) => {
                if (pr.migrationFile) {
                    console.log(`Applying ${LABEL} label to PR:${pr.number} because of file ${pr.migrationFile.filename}`);
                    await github.rest.issues.addLabels({ ...BASE_PARAMS, issue_number: pr.number, labels: [LABEL] });
                } else if (pr.labels.includes(LABEL)) {
                    console.log(`Removing ${LABEL} label from PR:${pr.number}`);
                    await github.rest.issues.removeLabel({ ...BASE_PARAMS, issue_number: pr.number, name: LABEL });
                }
            });
